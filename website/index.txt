h1. InstantCache

InstantCache provides accessor declarations that permit you to keep instance variables in a memcached cluster rather than local memory.

h2. What

Mixing in the <tt>InstantCache</tt> module gives you access to the following declarators:

* <tt>memcached_accessor</tt>
* <tt>memcached_reader</tt>
* <tt>memcached_counter</tt>

These allow you to declare instance variables whose values are actually stored in a memcached cluster rather than in local memory.  With appropriate naming, this allows you to share instance variables between different objects -- even on different systems.

h2. Installing

<pre syntax="ruby">sudo gem install instantcache</pre>

h2. The basics

InstantCache works by creating a special <i>blob object</i> and storing it in the instance variable.  This blob object intercepts methods aimed at the instance variable and redirects them to a value stored in a memcache cell instead.

h2. Documentation

The RDoc documentation for InstantCache may be found "here":rdoc/

h2. Demonstration of usage

<pre>
require 'memcache'
require 'instantcache'
class Foo
  include InstantCache
  memcached_accessor(InstantCache::SHARED, :sharedvar)
end

InstantCache.cache_object = MemCache.new('127.0.0.1:11211')
f = Foo.new
f.sharedvar
=> nil
f.sharedvar = 17
=> nil
f.sharedvar = [17]
=> [17]
f.sharedvar << 23
=> [17,23]
</pre>

See the <tt>test_multilocking</tt> method in the "<tt>test/test_sharing_complex.rb</tt>":https://github.com/RoUS/rubygem-instantcache/blob/master/test/test_sharing_complex.rb script for an example/demonstration of variables being shared, locked, and unlocked between different objects and threads.

h2. Forum/Mailing List

* "InstantCache-discuss@rubyforge.org":mailto:InstantCache-discuss@rubyforge.org
* "http://groups.google.com/group/rubygem-instantcache":http://groups.google.com/group/rubygem-instantcache

h2. How to submit patches

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ and for section "8b: Submit patch to Google Groups":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/#8b-google-groups, use the Google Group above.

You can fetch the source from either:

<% if rubyforge_project_id %>

* rubyforge: "http://rubyforge.org/scm/?group_id=<%= rubyforge_project_id %>":http://rubyforge.org/scm/?group_id=<%= rubyforge_project_id %>

<pre>git clone git://rubyforge.org/instantcache.git</pre>

<% else %>

* rubyforge: MISSING IN ACTION

TODO - You can not created a RubyForge project, OR have not run <code>rubyforge config</code>
yet to refresh your local rubyforge data with this projects' id information.

When you do this, this message will magically disappear!

Or you can hack website/index.txt and make it all go away!!

<% end %>

* github: "http://github.com/RoUS/rubygem-instantcache/tree/master":http://github.com/RoUS/rubygem-instantcache/tree/master

<pre>git clone git://github.com/RoUS/rubygem-instantcache.git</pre>


h3. Build and test instructions

<pre>
cd instantcache
rake test
rake install_gem
</pre>


h2. License

This code is free to use under the terms of the Apache Licence V2.0. 

h2. Contact

Comments are welcome. Send an email to "The Rodent of Unusual Size":mailto:coar@rubyforge.org email via the "forum":http://groups.google.com/group/instantcache

